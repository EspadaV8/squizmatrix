<!--
/**
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | This MySource Matrix CMS file is Copyright (c) Squiz Pty Ltd       |
* | ACN 084 670 600                                                    |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
* | IMPORTANT: Your use of this Software is subject to the terms of    |
* | the Licence provided in the file licence.txt. If you cannot find   |
* | this file please contact Squiz (www.squiz.net) so we may provide   |
* | you a copy.                                                        |
* +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
*
* $Id: edit_interface_screen_details.xml,v 1.1.1.1 2013/07/19 00:29:26 ewang Exp $
*
*/
-->

<contents>
    <section name="Details" write_access="write:attributes">
        <field attribute="name">
            <display_name>Page Name</display_name>
            <note />
            <text width="35" height="1" />
        </field>
        <field attribute="short_name">
            <display_name>Page Short Name</display_name>
            <note />
            <text width="35" height="1" />
        </field>
    </section>
    <section name="General Settings" write_access="write:attributes">
        <field>
            <display_name>Oauth 2.0 Token</display_name>
            <note>Session token storage must be used.</note>
            <function_call>
                <paint_function name="paintOauthToken" />
                <process_function name="processOauthToken" />
            </function_call>
        </field>
        <field attribute="userid_api_url">
            <display_name>User Profile API</display_name>
            <note>Specify the REST API to get user profile. The API should return user's ID as minimum. The response must be in JSON format.</note>
            <text width="80" height="1" />
        </field>
        <field attribute="userid_location">
            <display_name>User ID Location</display_name>
            <note>Specify the user id location in the response of above API.  Use format "result.user.id" to denote a multi-level location. Leave it blank for default location "id".</note>
            <text width="35" height="1" />
        </field>
    </section>
    <section name="User Creation Settings" write_access="write:menu">
        <field>
            <display_name>Matrix User to Create</display_name>
            <note></note>
            <function_call>
                <paint_function name="paintAddCreateType" />
                <process_function name="processAddCreateType" />
            </function_call>
        </field>
        <field>
            <display_name>Metadata Schemas to Apply</display_name>
            <note>These metadata schemas will be applied to created assets.  Values for these schemas' fields may be supplied by the user when creating the asset.  By default, the complete interface for these schemas, exactly as it would appear in the administration interface, will be printed above the default create form for each asset type.  It is recommended that the create form be customised (see below) so that the individual fields can be laid out appropriately within the form using &#37;metadata-F_(fieldid)&#37; keywords.</note>
            <function_call>
                <paint_function name="paintSchemasToApply" />
                <process_function name="processSchemasToApply" />
            </function_call>
        </field>
        <field attribute="allow_link">
            <display_name>Allow Linking To Existing Users</display_name>
            <note><![CDATA[If an user is logged in as a local Matrix user and Oauth authenticated,  but those 2 accounts are not linked,  Oauth Account Manager displays Create Link bodycopy to allow linking of accounts. <br/>Disabling this option will force Oauth Account Manager to only create new local users for new Oauth accounts.]]></note>
            <boolean true_text="yes" false_text="no" />
        </field>
        <field attribute="auto_create">
            <display_name>Automatic Creation</display_name>
            <note><![CDATA[After authentication of a new user, Oauth Account Manager can automatically create the linked local user and log in as the local user. The username is generated from Oauth id. Password is generated as random string. All other attributes are left blank. Enabling this option to skip Create User process.]]></note>
            <boolean true_text="yes" false_text="no" />
        </field>
        <field attribute="randomize_password">
            <display_name>Disallow Password Login</display_name>
            <note><![CDATA[After linking an Oauth Account to a user, this option will randomise the userâ€™s password and disallow the user to log into the system using their standard Matrix username and password. The user will only be able to login via this bridge.]]></note>
            <boolean true_text="yes" false_text="no" />
        </field>
    </section>
    <section name="Populate User Attributes" write_access="write:menu">
        <note>Populate user attributes with predefined values on creation/linking of user asset. Global keywords are supported. For example, to prefill with a profile attribute "first_name", use keyword %globals_session_oauth_profile_first_name% in the value. If the profile attribute is stored as array structure, you can use numeric index to access specific array element. e.g %globals_session_oauth_profile_first_name_0%. Keyword %globals_session_oauth_profile% will print all attributes in JSON format string.</note>
        <field>
            <display_name>Attributes To Populate on Creation</display_name>
            <function_call>
                <paint_function name="paintPrefillFields" />
                <process_function name="processPrefillFields" />
            </function_call>
        </field>
    </section>
    <section name="Sync User Attributes" write_access="write:menu">
        <note>Similar to the Populate User Attributes function except that it happens every time the user logs into Matrix.</note>
        <field>
            <display_name>Attributes To Sync on Login</display_name>
            <function_call>
                <paint_function name="paintSyncFields" />
                <process_function name="processSyncFields" />
            </function_call>
        </field>
    </section>
    <section name="Return Location" write_access="write:attributes" limbo_access="1">
        <field attribute="redirect_url">
            <display_name>URL</display_name>
            <note>%description% (for example, &lt;i&gt;http://matrix.squiz.net/&lt;/i&gt;). Global keywords are supported.
			</note>
            <text width="80" height="1" />
        </field>
        <field>
            <display_name>or Asset</display_name>
            <note />
            <function_call>
                <paint_function name="paintRedirectAssetid" />
                <process_function name="processRedirectAssetid" />
            </function_call>
        </field>
        <field attribute="use_querystring_parameter">
            <display_name>or Use query &lt;br /&gt; string parameter?</display_name>
            <note>%description% &lt;br /&gt;
			For example if &lt;i&gt;url&lt;/i&gt; was entered and a part of the inbound query string is
			&lt;em&gt;url=http://matrix.squiz.net&lt;/em&gt; then the user would be redirected to matrix.squiz.net
			</note>
            <text width="20" height="1"/>
        </field>
        <field attribute="redirect_after_login">
            <display_name>Redirect After Login</display_name>
            <note></note>
            <boolean true_text="yes" false_text="no" />
        </field>
        <field attribute="redirect_after_create">
            <display_name>Redirect After User Created</display_name>
            <note></note>
            <boolean true_text="yes" false_text="no" />
        </field>
        <field attribute="redirect_after_link">
            <display_name>Redirect After Link Created</display_name>
            <note></note>
            <boolean true_text="yes" false_text="no" />
        </field>
    </section>
    <section name="Advanced Settings" write_access="write:attributes">
        <field attribute="allow_public_user">
            <display_name>Ignore Permissions</display_name>
            <note>If this option is enabled, link permissions will not be checked when creating the asset. Otherwise, users must have permission to create assets in the create locations specified.</note>
            <boolean true_text="yes" false_text="no"/>
        </field>
        <field attribute="submit_to_page_url">
            <display_name>Form Submission URL</display_name>
            <note>If this page will be nested (in another page, or in a design), its form will be visible at a URL different to this page's URL.  Use this setting to control whether the form should submit to the same URL it's displayed at, or to this page's own URL.</note>
            <boolean true_text="cms_this_page_own_url" false_text="cms_current_url" />
        </field>
        <field attribute="link_value">
            <display_name>Set Link Value</display_name>
            <note>If this option holds a value, each link will be created with the value. If this option is left blank, then each link will be created without a value</note>
            <text width="25" height="1" />
        </field>
        <field attribute="layout_to_apply">
            <display_name>Paint Layout to Apply</display_name>
            <note>You may select a paint layout to apply to newly created assets. This paint layout is an asset based layout which means it will be applied to all URLs of the asset and will be inherited by all of its children.</note>
            <assetid type_codes="paint_layout_page:D" />
        </field>
        <field attribute="override_layout_to_apply">
            <display_name>Override Paint Layout to Apply</display_name>
            <note>You may select an override paint layout to apply to newly created assets. This paint layout is an asset based override layout which means it will be applied to all URLs of the asset but will not be inherited by any of its children.</note>
            <assetid type_codes="paint_layout_page:D" />
        </field>
        <field>
            <display_name>Create Form Customisation</display_name>
            <note>If an asset type is selected for create form customisation, a layout asset will be created under this page and will be be used when displaying the create form for that asset type.  Fields from the details or metadata screens may be included in the layout.</note>
            <function_call>
                <paint_function name="paintCreateFormCustomisation" />
                <process_function name="processCreateFormCustomisation" />
            </function_call>
        </field>
    </section>
</contents>
